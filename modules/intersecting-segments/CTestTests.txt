#############################################
##### Testing
#############################################

set(prefix "${MODULE}")

add_test(
    NAME ${prefix}_can_Run
    COMMAND ${APPLICATION}
)
set_tests_properties (${prefix}_can_Run PROPERTIES
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_can_Print_Help_Without_Arguments
    COMMAND ${APPLICATION}
)

set_tests_properties (${prefix}_can_Print_Help_Without_Arguments PROPERTIES
    PASS_REGULAR_EXPRESSION "This is an intersecting segments application"
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_can_Check_Number_Of_Arguments
    COMMAND ${APPLICATION} 1 2
)
set_tests_properties (${prefix}_can_Check_Number_Of_Arguments PROPERTIES
    PASS_REGULAR_EXPRESSION "Should be 8 arguments."
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_can_Detect_Wrong_Format
    COMMAND ${APPLICATION} 1 pi 2 4 + 3 7 5
)
set_tests_properties (${prefix}_can_Detect_Wrong_Format PROPERTIES
    PASS_REGULAR_EXPRESSION "Wrong number format!"
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_can_Detect_Intersecting_Segments
    COMMAND ${APPLICATION} 1 1 1 5 0 3 2 4
)
set_tests_properties (${prefix}_can_Detect_Intersecting_Segments PROPERTIES
    PASS_REGULAR_EXPRESSION "Segments do intersect"
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_can_Detect_Not_Intersecting_Segments
    COMMAND ${APPLICATION} 1 1 1 5 2 3 2 4
)
set_tests_properties (${prefix}_can_Detect_Not_Intersecting_Segments PROPERTIES
    PASS_REGULAR_EXPRESSION "Segments do not intersect"
    LABELS "${MODULE}")

add_test(
    NAME ${prefix}_can_Detect_Intersecting_Segments_On_The_Line
    COMMAND ${APPLICATION} 1 1 3 3 2 2 4 4
)
set_tests_properties (${prefix}_can_Detect_Intersecting_Segments_On_The_Line PROPERTIES
    PASS_REGULAR_EXPRESSION "Segments do intersect"
    LABELS "${MODULE}")